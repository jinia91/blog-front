name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: 테스트 커버리지 측정 및 저장
        id: output-coverage
        run: |
          echo "## Test Coverage Report" > coverage-report.md
          echo '```' >> coverage-report.md
          npm run test:coverage | tee -a coverage-report.md
          echo '```' >> coverage-report.md

      - name: Comment coverage report on PR
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const coverageReport = fs.readFileSync('coverage-report.md', 'utf8');
            const context = github.context;
            
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const existingComment = comments.data.find(comment => comment.body.includes('vitest 커버리지 결과'));
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: 'vitest 커버리지 결과\n' + coverageData,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: 'vitest 커버리지 결과\n' + coverageData,
              });
            }
